{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from './user';\nimport post from './post';\nconst initialState = {\n  user: {},\n  post: {\n    mainPosts: []\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/index.js"],"names":["HYDRATE","user","post","initialState","mainPosts","rootReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,YAAY,GAAC;AACfF,EAAAA,IAAI,EAAC,EADU;AAGfC,EAAAA,IAAI,EAAC;AACDE,IAAAA,SAAS,EAAC;AADT;AAHU,CAAnB;;AASA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA6B;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,OAAL;AACI,6CAAWM,KAAX,GAAoBC,MAAM,CAACE,OAA3B;;AAEJ;AACI,aAAOH,KAAP;AALR;AAOH,CARD;;AAUA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from './user';\r\nimport post from './post';\r\n\r\nconst initialState={\r\n    user:{\r\n    },\r\n    post:{\r\n        mainPosts:[],\r\n    }\r\n}\r\n\r\n\r\nconst rootReducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return {...state,...action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer; "]},"metadata":{},"sourceType":"module"}