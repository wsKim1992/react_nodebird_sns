{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(20).fill().map(function (v, i) {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.imageUrl()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\ninitialState.mainPosts = initialState.mainPosts.concat();\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","v","i","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","imageUrl","Comments","sentence","concat","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","post","find","postId"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState={\r\n    mainPosts:[],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n}\r\n\r\nexport const generateDummyPost=(number)=>Array(20).fill().map((v,i)=>({\r\n    id:shortId.generate(),\r\n    User:{\r\n        id:shortId.generate(),\r\n        nickname:faker.name.findName(),\r\n    },\r\n    content:faker.lorem.paragraph(),\r\n    Images:[{\r\n        src:faker.image.imageUrl(),\r\n    }],\r\n    Comments:[{\r\n        User:{\r\n            id:shortId.generate(),\r\n            nickname:faker.name.findName()\r\n        },\r\n        content:faker.lorem.sentence(),\r\n    }],\r\n}))\r\n\r\ninitialState.mainPosts=initialState.mainPosts.concat(\r\n    \r\n)\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data)=>({\r\n    id:data.id,\r\n    content:data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    }\r\n})\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    return produce (state,(draft)=>{\r\n        switch(action.type){\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading=true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError=null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=true;    \r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading=false;\r\n                draft.addPostError=action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading=true;\r\n                draft.removePostDone=false;\r\n                draft.removePostError=null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts=draft.mainPosts.filter((v)=>v.id!==action.data);\r\n                draft.removePostLoading=false;\r\n                draft.removePostDone=true;\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading=false;\r\n                draft.removePostError=action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading=true;\r\n                draft.addCommentDone=false;\r\n                draft.addCommentError=null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=true;\r\n                break;\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentError=action.error;\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}