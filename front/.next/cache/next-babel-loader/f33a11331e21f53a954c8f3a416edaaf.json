{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\study\\\\nodebird_sns\\\\front\\\\components\\\\PostCard.js\";\nimport { Card, Button, Popover, Avatar, List, Comment } from \"antd\";\nimport React, { useState, useCallback } from \"react\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 40\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        towToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length} 개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 41\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number || PropTypes.string,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/components/PostCard.js"],"names":["Card","Button","Popover","Avatar","List","Comment","React","useState","useCallback","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","ButtonGroup","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","me","state","user","removePostLoading","id","onToggleLike","prev","onToggleComment","onRemovePost","type","data","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","string","object","createdAt","arrayOf","isRequired"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,MAAd,EAAsBC,OAAtB,EAA8BC,MAA9B,EAAqCC,IAArC,EAA0CC,OAA1C,QAAyD,MAAzD;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,WAAvB,QAAyC,OAAzC;AACA,SAASC,eAAT,EAAyBC,YAAzB,EAAsCC,aAAtC,EAAoDC,eAApD,EAAoEC,gBAApE,QAA4F,mBAA5F;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AACrB,QAAMC,QAAQ,GAAEV,WAAW,EAA3B;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAOC;AAAP,MAAmBpB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM;AAAA,OAACqB,iBAAD;AAAA,OAAmBC;AAAnB,MAA2CtB,QAAQ,CAAC,KAAD,CAAzD;AACA,QAAM;AAACuB,IAAAA;AAAD,MAAKd,WAAW,CAAEe,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAtB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAoBjB,WAAW,CAAEe,KAAD,IAASA,KAAK,CAACP,IAAhB,CAArC;AACA,QAAMU,EAAE,GAAGJ,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,EAAf;AACA,QAAMC,YAAY,GAAC3B,WAAW,CAAC,MAAM;AACjCmB,IAAAA,QAAQ,CAAES,IAAD,IAAQ,CAACA,IAAV,CAAR;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAGA,QAAMC,eAAe,GAAG7B,WAAW,CAAC,MAAI;AACpCqB,IAAAA,oBAAoB,CAAEO,IAAD,IAAQ,CAACA,IAAV,CAApB;AACH,GAFkC,EAEjC,EAFiC,CAAnC;AAGA,QAAME,YAAY,GAAE9B,WAAW,CAAC,MAAM;AAClCiB,IAAAA,QAAQ,CAAC;AAACc,MAAAA,IAAI,EAAClB,mBAAN;AAA0BmB,MAAAA,IAAI,EAAChB,IAAI,CAACU;AAApC,KAAD,CAAR;AACH,GAF8B,EAE7B,EAF6B,CAA/B;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,YAAY,EAAC;AAAd,KAAZ;AAAA,4BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEjB,IAAI,CAACkB,MAAL,CAAY,CAAZ,kBAAgB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAElB,IAAI,CAACkB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAD3B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAuB,SAAvB;AAAA;AAAA;AAAA;AAAA,cADK,EAELhB,KAAK,gBACA,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAES;AAA9C,SAAiE,OAAjE;AAAA;AAAA;AAAA;AAAA,cADA,gBAEA,QAAC,aAAD;AAA4B,QAAA,OAAO,EAAEA;AAArC,SAAoB,OAApB;AAAA;AAAA;AAAA;AAAA,cAJA,eAML,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEE;AAA1B,SAAiD,SAAjD;AAAA;AAAA;AAAA;AAAA,cANK,eAOL,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,WAAD;AAAA,oBACKH,EAAE,IAAGV,IAAI,CAACmB,IAAL,CAAUT,EAAV,KAAeA,EAApB,gBACG;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAED,iBAA/B;AAAkD,cAAA,OAAO,EAAEK,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADH,gBAMD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA,+BAWI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAXJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cAPK,CAFb;AAuBI,MAAA,KAAK,EAAEJ,EAAE,iBAAE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEV;AAApB;AAAA;AAAA;AAAA;AAAA,cAvBf;AAAA,6BAyBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASA,IAAI,CAACmB,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEpB,IAAI,CAACmB,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,eAAE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEpB,IAAI,CAACqB;AAAhC;AAAA;AAAA;AAAA;AAAA;AAHjB;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAkCKjB,iBAAiB,iBACjB;AAAA,8BACG,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,IAAD;AACI,QAAA,MAAM,EAAK,GAAEA,IAAI,CAACsB,QAAL,CAAcC,MAAO,QADtC;AAEI,QAAA,UAAU,EAAC,YAFf;AAGI,QAAA,UAAU,EAAGvB,IAAI,CAACsB,QAHtB;AAII,QAAA,UAAU,EAAGE,IAAD,iBACR;AAAA,iCACI,QAAC,OAAD;AACI,YAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADtB;AAEI,YAAA,MAAM,eAAE,QAAC,MAAD;AAAA,wBAASI,IAAI,CAACL,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFZ;AAGI,YAAA,OAAO,EAAEI,IAAI,CAACH;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyDH,CAzED;;AA2EAtB,QAAQ,CAAC0B,SAAT,GAAqB;AACjBzB,EAAAA,IAAI,EAACP,SAAS,CAACiC,KAAV,CAAgB;AACjBhB,IAAAA,EAAE,EAACjB,SAAS,CAACkC,MAAV,IAAoBlC,SAAS,CAACmC,MADhB;AAEjBT,IAAAA,IAAI,EAAC1B,SAAS,CAACoC,MAFE;AAGjBR,IAAAA,OAAO,EAAC5B,SAAS,CAACmC,MAHD;AAIjBE,IAAAA,SAAS,EAACrC,SAAS,CAACoC,MAJH;AAKjBP,IAAAA,QAAQ,EAAC7B,SAAS,CAACsC,OAAV,CAAkBtC,SAAS,CAACoC,MAA5B,CALQ;AAMjBX,IAAAA,MAAM,EAACzB,SAAS,CAACsC,OAAV,CAAkBtC,SAAS,CAACoC,MAA5B;AANU,GAAhB,EAOFG;AARc,CAArB;AAWA,eAAejC,QAAf","sourcesContent":["import {Card, Button, Popover,Avatar,List,Comment } from \"antd\";\r\nimport React,{useState,useCallback} from \"react\";\r\nimport { RetweetOutlined,HeartTwoTone,HeartOutlined,MessageOutlined,EllipsisOutlined } from \"@ant-design/icons\";\r\nimport ButtonGroup from \"antd/lib/button/button-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\nconst PostCard=({post})=>{\r\n    const dispatch= useDispatch();\r\n    const [liked,setLiked] = useState(false);\r\n    const [commentFormOpened,setCommentFormOpened] = useState(false);\r\n    const {me}=useSelector((state)=>state.user);   \r\n    const {removePostLoading}=useSelector((state)=>state.post);   \r\n    const id = me?.id;\r\n    const onToggleLike=useCallback(() => {\r\n        setLiked((prev)=>!prev);\r\n    },[]);\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpened((prev)=>!prev);\r\n    },[])\r\n    const onRemovePost= useCallback(() => {\r\n        dispatch({type:REMOVE_POST_REQUEST,data:post.id})\r\n    },[])\r\n    return(\r\n        <div style={{marginBottom:20}}>\r\n            <Card\r\n                cover={post.Images[0]&&<PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined key = \"retweet\"/>,\r\n                    liked\r\n                        ?<HeartTwoTone towToneColor=\"#eb2f96\" onClick={onToggleLike} key =\"heart\"/>\r\n                        :<HeartOutlined key =\"heart\" onClick={onToggleLike}/>\r\n                    ,\r\n                    <MessageOutlined onClick={onToggleComment} key = \"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <ButtonGroup>\r\n                            {id&& post.User.id===id?(\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                </>\r\n                            ):\r\n                            <Button>신고</Button>}\r\n                        </ButtonGroup>\r\n                    )}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n                extra={id&&<FollowButton post={post}/>}\r\n            >   \r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content}/>}\r\n                />\r\n                {/* <Image/>\r\n                <Content/> */}\r\n            </Card>\r\n            {commentFormOpened&&\r\n            (<div>\r\n                <CommentForm post={post}/>\r\n                <List\r\n                    header = {`${post.Comments.length} 개의 댓글`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource= {post.Comments}\r\n                    renderItem={(item)=>(\r\n                        <li>\r\n                            <Comment\r\n                                author={item.User.nickname}\r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content={item.content}\r\n                            />\r\n                        </li>\r\n                    )}\r\n                />\r\n            </div>)}\r\n            {/* <CommentForm/>\r\n            <Comments/> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post:PropTypes.shape({\r\n        id:PropTypes.number || PropTypes.string,\r\n        User:PropTypes.object,\r\n        content:PropTypes.string,\r\n        createdAt:PropTypes.object,\r\n        Comments:PropTypes.arrayOf(PropTypes.object),\r\n        Images:PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}