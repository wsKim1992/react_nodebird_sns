{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\study\\\\nodebird_sns\\\\front\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }, this), mainPosts.map((post, idx) => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/pages/index.js"],"names":["React","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","useEffect","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","me","state","user","mainPosts","post","map","idx","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAI;AACb,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAQ,EAAAA,SAAS,CAAC,MAAI;AACVD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACJ;AADA,KAAD,CAAR;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMAG,EAAAA,SAAS,CAAC,MAAI;AACV,aAASE,QAAT,GAAmB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA2BC,QAAQ,CAACC,eAAT,CAAyBC,YAApD,EAAiEF,QAAQ,CAACC,eAAT,CAAyBE,YAA1F;AACH;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCT,QAAjC;AACA,WAAO,MAAI;AACPG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCV,QAApC;AACH,KAFD;AAGH,GARQ,EAQP,EARO,CAAT;AAUA,QAAM;AAACW,IAAAA;AAAD,MAAKpB,WAAW,CAAEqB,KAAD,IAASA,KAAK,CAACC,IAAhB,CAAtB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAcvB,WAAW,CAAEqB,KAAD,IAASA,KAAK,CAACG,IAAhB,CAA/B;AAEA,sBACI,QAAC,SAAD;AAAA,eACKJ,EAAE,iBAAE,QAAE,QAAF;AAAA;AAAA;AAAA;AAAA,YADT,EAEKG,SAAS,CAACE,GAAV,CAAc,CAACD,IAAD,EAAME,GAAN,kBAAY,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEF;AAA9B,OAAeA,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,YAA1B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5BD;;AA8BA,eAAetB,IAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\n\r\nconst Home = ()=>{\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:LOAD_POSTS_REQUEST\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function onScroll(){\r\n            console.log(window.scrollY,document.documentElement.clientHeight,document.documentElement.scrollHeight);\r\n        }\r\n        window.addEventListener('scroll',onScroll);\r\n        return ()=>{\r\n            window.removeEventListener('scroll',onScroll);\r\n        }\r\n    },[])\r\n\r\n    const {me}=useSelector((state)=>state.user);\r\n    const {mainPosts} = useSelector((state)=>state.post);\r\n\r\n    return(\r\n        <AppLayout>\r\n            {me&&< PostForm/>}\r\n            {mainPosts.map((post,idx)=><PostCard key={post.id} post={post}/>)}\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}