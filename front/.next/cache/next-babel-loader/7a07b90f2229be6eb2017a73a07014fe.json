{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'dntjr9214'\n    },\n    content: '첫 번쨰 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      src: \"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"\n    }, {\n      src: \"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"\n    }, {\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        nickname: 'hero'\n      },\n      content: '우와 개정판이 나왔군요~!'\n    }, {\n      id: shortId.generate(),\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\n\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      var postIndex = state.mainPosts.findIndex(function (v) {\n        return v.id === action.data.postId;\n      });\n\n      var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n      post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n      var mainPosts = _toConsumableArray(state.mainPosts);\n\n      mainPosts[postIndex] = post;\n      console.log(mainPosts);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post","console","log"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'dntjr9214'\r\n        },\r\n        content:'첫 번쨰 게시글 #헤시태그 #익스프레스',\r\n        Images:[\r\n            {src:\"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"},\r\n            {src:\"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"},\r\n            {src:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"}\r\n        ],\r\n        Comments:[{\r\n            id:shortId.generate(),\r\n            User:{\r\n                nickname:'hero',\r\n            },\r\n            content:'우와 개정판이 나왔군요~!'\r\n        },{\r\n            id:shortId.generate(),\r\n            User:{\r\n                nickname:'hero',\r\n            },\r\n            content:'얼른 사고싶어요~',\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    }\r\n})\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone:false,\r\n                addPostError:null,\r\n            }\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost(action.data),...state.mainPosts],\r\n                addPostLoading:false,\r\n                addPostDone:true,\r\n                //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading:false,\r\n                addPostError:action.error\r\n            }\r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone:false,\r\n                addCommentError:null,\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            const postIndex = state.mainPosts.findIndex((v)=>v.id===action.data.postId);\r\n            const post = {...state.mainPosts[postIndex]};\r\n            post.Comments = [dummyComment(action.data.content),...post.Comments];\r\n            const mainPosts=[...state.mainPosts];\r\n            mainPosts[postIndex]=post;\r\n            console.log(mainPosts);\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                addCommentLoading:false,\r\n                addCommentDone:true,\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                ...state,\r\n                addCommentLoading:false,\r\n                addCommentError:action.error\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}