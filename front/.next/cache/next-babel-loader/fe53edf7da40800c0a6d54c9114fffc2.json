{"ast":null,"code":"import { all, fork, put, throttle, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost() {\n  try {\n    //const result = yield call(addPostAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost, 2000);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/sagas/post.js"],"names":["all","fork","put","throttle","delay","axios","addPostAPI","data","post","addPost","type","err","response","watchAddPost","takeLatest","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,GAAjB,EAAqBC,QAArB,EAA8BC,KAA9B,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAuBD,IAAvB,CAAP;AACH;;AAED,UAAUE,OAAV,GAAmB;AACf,MAAG;AACC;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAC;AADC,KAAD,CAAT;AAGH,GAND,CAMC,OAAMC,GAAN,EAAU;AACP,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAC,kBADC;AAENH,MAAAA,IAAI,EAACI,GAAG,CAACC,QAAJ,CAAaL;AAFZ,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,YAAV,GAAwB;AACpB,QAAMC,UAAU,CAAC,kBAAD,EAAoBL,OAApB,EAA4B,IAA5B,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAoB;AAC/B,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACY,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {all,fork,put,throttle,delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post',data);\r\n}\r\n\r\nfunction* addPost(){\r\n    try{\r\n        //const result = yield call(addPostAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:'ADD_POST_SUCCESS'\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:'ADD_POST_FAILURE',\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest('ADD_POST_REQUEST',addPost,2000);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}