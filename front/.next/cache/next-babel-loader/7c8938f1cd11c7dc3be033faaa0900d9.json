{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\study\\\\nodebird_sns\\\\front\\\\components\\\\CommentForm.js\";\nimport { Form, Input, Button } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margi: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/components/CommentForm.js"],"names":["Form","Input","Button","useCallback","useEffect","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","dispatch","onSubmitComment","type","data","content","postId","userId","position","margi","right","bottom","propTypes","object","isRequired"],"mappings":";AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAoBC,MAApB,QAAiC,MAAjC;AACA,SAASC,WAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAC1B,QAAMC,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB;AACA,QAAK;AAACI,IAAAA;AAAD,MAAmBT,WAAW,CAAEM,KAAD,IAASA,KAAK,CAACF,IAAhB,CAAnC;AACA,QAAM,CAACM,WAAD,EAAaC,mBAAb,EAAiCC,cAAjC,IAAiDd,QAAQ,CAAC,EAAD,CAA/D;AACA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGY,cAAH,EAAkB;AACdG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIP,CAACH,cAAD,CAJO,CAAT;AAMA,QAAMK,eAAe,GAAGlB,WAAW,CAAC,MAAI;AACpCiB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACb,mBADA;AAELc,MAAAA,IAAI,EAAC;AAACC,QAAAA,OAAO,EAACP,WAAT;AAAsBQ,QAAAA,MAAM,EAACd,IAAI,CAACC,EAAlC;AAAqCc,QAAAA,MAAM,EAACd;AAA5C;AAFA,KAAD,CAAR;AAIH,GALkC,EAKjC,CAACK,WAAD,EAAaL,EAAb,CALiC,CAAnC;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAES,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACM,QAAAA,QAAQ,EAAC,UAAV;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEX,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACS,UAAAA,QAAQ,EAAC,UAAV;AAAqBE,UAAAA,KAAK,EAAC,CAA3B;AAA6BC,UAAAA,MAAM,EAAC,CAAC;AAArC,SAAf;AAAyD,QAAA,IAAI,EAAC,SAA9D;AAAwE,QAAA,QAAQ,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzBD;;AA2BApB,WAAW,CAACqB,SAAZ,GAAsB;AAClBpB,EAAAA,IAAI,EAACL,SAAS,CAAC0B,MAAV,CAAiBC;AADJ,CAAtB;AAIA,eAAevB,WAAf","sourcesContent":["import {Form, Input,Button} from 'antd';\r\nimport { useCallback,useEffect } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst CommentForm = ({post})=>{\r\n    const id = useSelector((state)=>state.user.me?.id);\r\n    const{addCommentDone} = useSelector((state)=>state.post);\r\n    const [commentText,onChangeCommentText,setCommentText]=useInput('');\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(()=>{\r\n        dispatch({\r\n            type:ADD_COMMENT_REQUEST,\r\n            data:{content:commentText, postId:post.id,userId:id}\r\n        })\r\n    },[commentText,id]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position:'relative',margi:0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button style={{position:'absolute',right:0,bottom:-40}} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes={\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}