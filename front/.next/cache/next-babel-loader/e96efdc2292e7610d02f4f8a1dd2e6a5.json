{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action creator\n\nexport const loginAction = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: 'LOG_OUT'\n  };\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,IAAI,EAAC;AACDC,IAAAA,UAAU,EAAC,KADV;AAEDD,IAAAA,IAAI,EAAC,IAFJ;AAGDE,IAAAA,UAAU,EAAC,EAHV;AAIDC,IAAAA,SAAS,EAAC;AAJT,GADU;AAOfC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAC;AADT;AAPU,CAAnB,C,CAYA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAQ;AAC/B,SAAM;AACFC,IAAAA,IAAI,EAAC,QADH;AACYD,IAAAA;AADZ,GAAN;AAGH,CAJM;AAMP,OAAO,MAAME,YAAY,GAAG,MAAI;AAC5B,SAAM;AACFD,IAAAA,IAAI,EAAC;AADH,GAAN;AAGH,CAJM;;AAKP,MAAME,WAAW,GAAG,CAACC,KAAK,GAACZ,YAAP,EAAoBa,MAApB,KAA6B;AAC7C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKV,OAAL;AACI,6CAAWa,KAAX,GAAoBC,MAAM,CAACC,OAA3B;;AACJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAC,IAFX;AAGAD,UAAAA,IAAI,EAACY,MAAM,CAACL;AAHZ;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOI,KADP;AAEIX,QAAAA,IAAI,kCACGW,KAAK,CAACX,IADT;AAEAC,UAAAA,UAAU,EAAC,KAFX;AAGAD,UAAAA,IAAI,EAAC;AAHL;AAFR;;AAQJ;AACI,aAAOW,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\r\n\r\nconst initialState={\r\n    user:{\r\n        isLoggedIn:false,\r\n        user:null,\r\n        signUpData:{},\r\n        loginData:{}\r\n    },\r\n    post:{\r\n        mainPosts:[],\r\n    }\r\n}\r\n\r\n//action creator\r\nexport const loginAction = (data)=>{\r\n    return{\r\n        type:'LOG_IN',data\r\n    }\r\n}\r\n\r\nexport const logoutAction = ()=>{\r\n    return{\r\n        type:'LOG_OUT'\r\n    }\r\n}\r\nconst rootReducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return {...state,...action.payload};\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user:{\r\n                    ...state.user,\r\n                    isLoggedIn:true,\r\n                    user:action.data\r\n                }\r\n            }\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user:{\r\n                    ...state.user,\r\n                    isLoggedIn:false,\r\n                    user:null\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer; "]},"metadata":{},"sourceType":"module"}