{"ast":null,"code":"import { all, fork, put, throttle, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost() {\n  try {\n    //const result = yield call(addPostAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/commnet`, data);\n}\n\nfunction* addComment() {\n  try {\n    //const result = yield call(addPostAPI,action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchCommentPost() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchCommentPost)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/sagas/post.js"],"names":["all","fork","put","throttle","takeLatest","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","type","err","response","watchAddPost","addCommentAPI","postId","addComment","watchCommentPost","postSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,GAAjB,EAAqBC,QAArB,EAA8BC,UAA9B,EAAyCC,KAAzC,QAAqD,oBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAAyBC,gBAAzB,EAA0CC,gBAA1C,EACKC,mBADL,EACyBC,mBADzB,EAC6CC,mBAD7C,QACuE,kBADvE;;AAGA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAuBD,IAAvB,CAAP;AACH;;AAED,UAAUE,OAAV,GAAmB;AACf,MAAG;AACC;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACT;AADC,KAAD,CAAT;AAGH,GAND,CAMC,OAAMU,GAAN,EAAU;AACP,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACR,gBADC;AAENK,MAAAA,IAAI,EAACI,GAAG,CAACC,QAAJ,CAAaL;AAFZ,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUM,YAAV,GAAwB;AACpB,QAAMhB,UAAU,CAACG,gBAAD,EAAkBS,OAAlB,CAAhB;AACH;;AAED,SAASK,aAAT,CAAuBP,IAAvB,EAA4B;AACxB,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACQ,MAAO,UAApC,EAA8CR,IAA9C,CAAP;AACH;;AAED,UAAUS,UAAV,GAAsB;AAClB,MAAG;AACC;AACA,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACN;AADC,KAAD,CAAT;AAGH,GAND,CAMC,OAAMO,GAAN,EAAU;AACP,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAACL,mBADC;AAENE,MAAAA,IAAI,EAACI,GAAG,CAACC,QAAJ,CAAaL;AAFZ,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,gBAAV,GAA4B;AACxB,QAAMpB,UAAU,CAACM,mBAAD,EAAqBa,UAArB,CAAhB;AACH;;AAED,eAAe,UAAUE,QAAV,GAAoB;AAC/B,QAAMzB,GAAG,CAAC,CACNC,IAAI,CAACmB,YAAD,CADE,EAENnB,IAAI,CAACuB,gBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {all,fork,put,throttle,takeLatest,delay} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_FAILURE\r\n    ,ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS,ADD_COMMENT_FAILURE} from '../reducers/post';\r\n\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post',data);\r\n}\r\n\r\nfunction* addPost(){\r\n    try{\r\n        //const result = yield call(addPostAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:ADD_POST_SUCCESS\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:ADD_POST_FAILURE,\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeLatest(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction addCommentAPI(data){\r\n    return axios.post(`/api/post/${data.postId}/commnet`,data);\r\n}\r\n\r\nfunction* addComment(){\r\n    try{\r\n        //const result = yield call(addPostAPI,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS\r\n        })\r\n    }catch(err){\r\n        yield put({\r\n            type:ADD_COMMENT_FAILURE,\r\n            data:err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchCommentPost(){\r\n    yield takeLatest(ADD_COMMENT_REQUEST,addComment);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchCommentPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}