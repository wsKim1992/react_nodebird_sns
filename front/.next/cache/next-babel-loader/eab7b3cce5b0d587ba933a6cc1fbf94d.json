{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'dntjr9214'\n    },\n    content: '첫 번쨰 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      src: \"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"\n    }, {\n      src: \"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"\n    }, {\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"\n    }],\n    Comments: [{\n      User: {\n        nickname: 'hero'\n      },\n      content: '우와 개정판이 나왔군요~!'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = {\n  id: 2,\n  content: '더미 데이터 입니다',\n  User: {\n    id: 1,\n    nickname: 'wooseokKim'\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\n\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\n\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","reducer","state","action","error"],"mappings":"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","sourcesContent":["export const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'dntjr9214'\r\n        },\r\n        content:'첫 번쨰 게시글 #헤시태그 #익스프레스',\r\n        Images:[\r\n            {src:\"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"},\r\n            {src:\"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"},\r\n            {src:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"}\r\n        ],\r\n        Comments:[{\r\n            User:{\r\n                nickname:'hero',\r\n            },\r\n            content:'우와 개정판이 나왔군요~!'\r\n        },{\r\n            User:{\r\n                nickname:'hero',\r\n            },\r\n            content:'얼른 사고싶어요~',\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = {\r\n    id:2,\r\n    content:'더미 데이터 입니다',\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n}\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_POST_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone:false,\r\n                addPostError:null,\r\n            }\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost,...state.mainPosts],\r\n                addPostLoading:false,\r\n                addPostDone:true,\r\n                //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading:false,\r\n                addPostError:action.error\r\n            }\r\n        case ADD_COMMENT_REQUEST:\r\n            return{\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone:false,\r\n                addPostError:null,\r\n            }\r\n        case ADD_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost,...state.mainPosts],\r\n                addPostLoading:false,\r\n                addPostDone:true,\r\n                //게시글의 가장 위쪽으로 추가되기 위하여 push 할 데이터를 앞에 놓는다.\r\n            };\r\n        case ADD_COMMENT_FAILURE:\r\n            return{\r\n                ...state,\r\n                addPostLoading:false,\r\n                addPostError:action.error\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}