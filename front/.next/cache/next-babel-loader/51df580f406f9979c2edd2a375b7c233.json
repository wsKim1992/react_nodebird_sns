{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'dntjr9214'\n    },\n    content: '첫 번쨰 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '우와 개정판이 나왔군요~!'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts = [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = state.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          removePostLoading: false,\n          removePostError: action.error\n        });\n\n      case ADD_COMMENT_REQUEST:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: true,\n          addCommentDone: false,\n          addCommentError: null\n        });\n\n      case ADD_COMMENT_SUCCESS:\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = post;\n        console.log(mainPosts);\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n\n      case ADD_COMMENT_FAILURE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentError: action.error\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/post.js"],"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","error","filter","v","postIndex","findIndex","postId","post","console","log"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\n\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'dntjr9214'\r\n        },\r\n        content:'첫 번쨰 게시글 #헤시태그 #익스프레스',\r\n        Images:[\r\n            {id:shortId.generate(),src:\"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"},\r\n            {id:shortId.generate(),src:\"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"},\r\n            {id:shortId.generate(),src:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"}\r\n        ],\r\n        Comments:[{\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname:'hero',\r\n            },\r\n            content:'우와 개정판이 나왔군요~!'\r\n        },{\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname:'hero',\r\n            },\r\n            content:'얼른 사고싶어요~',\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n}\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data)=>({\r\n    id:data.id,\r\n    content:data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    }\r\n})\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    return produce (state,(draft)=>{\r\n        switch(action.type){\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading=true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError=null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=true;    \r\n                draft.mainPosts = [dummyPost(action.data),...state.mainPosts];\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading=false;\r\n                draft.addPostError=action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading=true;\r\n                draft.removePostDone=false;\r\n                draft.removePostError=null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts=state.mainPosts.filter((v)=>v.id!==action.data);\r\n                draft.removePostLoading=false;\r\n                draft.removePostDone=true;\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                return{\r\n                    ...state,\r\n                    removePostLoading:false,\r\n                    removePostError:action.error\r\n                }\r\n            case ADD_COMMENT_REQUEST:\r\n                return{\r\n                    ...state,\r\n                    addCommentLoading: true,\r\n                    addCommentDone:false,\r\n                    addCommentError:null,\r\n                }\r\n            case ADD_COMMENT_SUCCESS:\r\n                const postIndex = state.mainPosts.findIndex((v)=>v.id===action.data.postId);\r\n                const post = {...state.mainPosts[postIndex]};\r\n                post.Comments = [dummyComment(action.data.content),...post.Comments];\r\n                const mainPosts=[...state.mainPosts];\r\n                mainPosts[postIndex]=post;\r\n                console.log(mainPosts);\r\n                return {\r\n                    ...state,\r\n                    mainPosts,\r\n                    addCommentLoading:false,\r\n                    addCommentDone:true,\r\n                };\r\n            case ADD_COMMENT_FAILURE:\r\n                return{\r\n                    ...state,\r\n                    addCommentLoading:false,\r\n                    addCommentError:action.error\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}