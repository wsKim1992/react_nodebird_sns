{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'dntjr9214'\n    },\n    content: '첫 번쨰 게시글 #헤시태그 #익스프레스',\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '우와 개정판이 나왔군요~!'\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\ninitialState.mainPosts.concat(Array(20).fill().map(function (v, i) {\n  return {\n    id: shortId.generate(),\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.paragraph,\n    Images: [{\n      src: faker.image.imageUrl()\n    }],\n    Comments: [{\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.sentence()\n    }]\n  };\n}));\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'wooseokKim'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.postId;\n        });\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/study/nodebird_sns/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","postAdded","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","concat","Array","fill","map","v","i","name","findName","lorem","paragraph","image","imageUrl","sentence","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","post","find","postId"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState={\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:'dntjr9214'\r\n        },\r\n        content:'첫 번쨰 게시글 #헤시태그 #익스프레스',\r\n        Images:[\r\n            {id:shortId.generate(),src:\"https://thumb.mt.co.kr/06/2021/01/2021012508208231071_1.jpg/dims/optimize/\"},\r\n            {id:shortId.generate(),src:\"https://thumb.mt.co.kr/06/2021/05/2021052406553082730_1.jpg/dims/optimize/\"},\r\n            {id:shortId.generate(),src:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQGe3EChBupPMd65lXdTEljpfFJj0OCVSfl-VQqgOze5yvgVaG1I07xNB5dUZ1_B05KHlU&usqp=CAU\"}\r\n        ],\r\n        Comments:[{\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname:'hero',\r\n            },\r\n            content:'우와 개정판이 나왔군요~!'\r\n        },{\r\n            id:shortId.generate(),\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname:'hero',\r\n            },\r\n            content:'얼른 사고싶어요~',\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n    addPostLoading:false,\r\n    addPostDone:false,\r\n    addPostError:null,\r\n    removePostLoading:false,\r\n    removePostDone:false,\r\n    removePostError:null,\r\n    addCommentLoading:false,\r\n    addCommentDone:false,\r\n    addCommentError:null,\r\n}\r\n\r\ninitialState.mainPosts.concat(\r\n    Array(20).fill().map((v,i)=>({\r\n        id:shortId.generate(),\r\n        User:{\r\n            id:shortId.generate(),\r\n            nickname:faker.name.findName(),\r\n        },\r\n        content:faker.lorem.paragraph,\r\n        Images:[{\r\n            src:faker.image.imageUrl(),\r\n        }],\r\n        Comments:[{\r\n            User:{\r\n                id:shortId.generate(),\r\n                nickname:faker.name.findName()\r\n            },\r\n            content:faker.lorem.sentence(),\r\n        }],\r\n    }))\r\n)\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost=(data)=>({\r\n    type:ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment=(data)=>({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data)=>({\r\n    id:data.id,\r\n    content:data.content,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n})\r\n\r\nconst dummyComment=(data)=>({\r\n    id:shortId.generate(),\r\n    content:data,\r\n    User:{\r\n        id:1,\r\n        nickname:'wooseokKim'\r\n    }\r\n})\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    return produce (state,(draft)=>{\r\n        switch(action.type){\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading=true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError=null;\r\n                break;\r\n            case ADD_POST_SUCCESS:\r\n                draft.addPostLoading=false;\r\n                draft.addPostDone=true;    \r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                break;\r\n            case ADD_POST_FAILURE:\r\n                draft.addPostLoading=false;\r\n                draft.addPostError=action.error;\r\n                break;\r\n            case REMOVE_POST_REQUEST:\r\n                draft.removePostLoading=true;\r\n                draft.removePostDone=false;\r\n                draft.removePostError=null;\r\n                break;\r\n            case REMOVE_POST_SUCCESS:\r\n                draft.mainPosts=draft.mainPosts.filter((v)=>v.id!==action.data);\r\n                draft.removePostLoading=false;\r\n                draft.removePostDone=true;\r\n                break;\r\n            case REMOVE_POST_FAILURE:\r\n                draft.removePostLoading=false;\r\n                draft.removePostError=action.error;\r\n                break;\r\n            case ADD_COMMENT_REQUEST:\r\n                draft.addCommentLoading=true;\r\n                draft.addCommentDone=false;\r\n                draft.addCommentError=null;\r\n                break;\r\n            case ADD_COMMENT_SUCCESS:\r\n                const post = draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentDone=true;\r\n                break;\r\n            case ADD_COMMENT_FAILURE:\r\n                draft.addCommentLoading=false;\r\n                draft.addCommentError=action.error;\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}